---
layout : post
title : "墙内的人终于走了出去"
permalink : "rethink"
date : 2016-02-29 10:23:14 --0001
---

离开老东家快一年了，再来回忆这三年的经历，有些东西反而清晰异常。很多便是离开的最好理由。

三年前毕业的时候确实什么都不会，大概只知道HTML是什么东西，知道C语言的简单语法，依然写不出一个互动的页面，js、java这些离我都还比较遥远。入职到分行折腾进来的大半年什么也没写，学习从哪个方向开始都有点迷茫。次年三四月份开始尝试改一些代码，慢慢初窥门径，7月开始参与到更小的项目中。到15年7月离职，差不多两年多一点的时间，主要做的就是三个项目：担保品、不良资产、信用评级。

我参与的这个内部系统实际上的业务模块很多，囊括了大部分对公业务部门。系统发展也比较早，早期的模块比少，10年开始了相当长的一个系统升级拓展爆发期。系统的定位是一个贷款业务(贷前、贷中、贷后)的授信管理系统。


担保品模块实际上只是管理客户的抵质押，本系统原先主要作为担保品价值的审批系统。后来开发了担保品的维护功能(此功能原先由核心系统提供)并且实现担保品信息上送，所有变更都需要同步上送核心(数据流向设计的约束，其他系统并不都认为本系统是该数据的原始来源)，核心的改动又需要批量同步本系统(已乱)。13年7月参与的项目就是一个担保品类别增加字段的项目，改动的也就是十几个字段，担保品贯穿了整个授信过程(实际上的好多个模块)，各个模块保留了相当的时点数据(还有各自录入的特征数据)，因此也就几乎改动了所有的模块，那时候胆子还真是大啊。14年的时候担保品维护功能又全部转移至另外一个系统，三个系统之间的联机、批量更让人有点不忍直视，本系统对于提取时点数据更有点茫然不知所去。一年之后实施不良资产新项目的时候需要评估担保品的价值，业务说不清，我自行梳理良久总感觉不能满足要求，徇又变成本模块部分录入，明知不妥终不能改。

不良资产是一个新的模块，搞笑的是，我们费了不少时日才让业务上下明白这不是一个独立的系统，只是我们原先系统的一个模块，由于原先体系的限制，有很多东西实现不了。由于处在业务流程的后端，最直接的问题就是要的数据从哪里来，准不准。理论上说，从最开始的营销到最后的放贷完成，所有的客户资料、授信信息、担保信息应该全面详实有来源，而实际情况呢，大部分都是没有来源，来了也不准，准也要延时。还有一部分数据需要另外一个部门的系统提供，而人家的系统建设还在排队呢，那怎么办，只有录入(一线人员对不起你们..)，他们有了再改造嘛。基础已不再坚实，后续的建筑是否能稳固呢，也只能玩玩平衡游戏吧。业务流程其实最后也是勉强实现了基本需求，在这一套基本框架下面无法体现业务的灵活性。后来另外一个部门终于排上队的时候，需求过来了，md，和前面有差别么!各自的政治资本而已，能否很好的为一线服务是次要的。

信用评级基本上是我独立完成的升级改造任务。懂这个模块的才离职没多久，还有一些参与过的同事对评级的全局也并没有很好的把握，文档基本为零。这个模块是系统最早建立的，可以看得出来早先的系统开发人员还是花了不少心思。评级系统涉及的统计模型计算，参数众多，而且模型也在不断调整，所以原先设计模型公式可以录入，计算时代入数据解析，除了公式的组织方式对业务不是很友好，是完成了需求的，而且类似Lisp基础计算模型的领域语言成了本系统公式计算的底层支撑。但是这种组织方式太过专业化，业务的模型管理人员至今没有掌握公式编写的方法(也不愿意掌握)，给调整带来了很大的困难。没有相应的自动化测试工具，手工测试的样本量只能完成很少的覆盖。到我的任务时，和业务沟通过程中明显感觉估算流程将会变化，以前的系统设计必须要重新设计才能保证后续的运转，否则越来越复杂的配置将会导致测试的缺陷和生产问题的爆发，业务方也仅愿意先实现当期任务再做考虑。当然上线后确实出了问题，解决完之后，差不多我也决定走了，离职的交接期把这个模块业务、代码、数据的概况写了一份文档，算是给自己一个交代。

其实从早期的全部系统的总体架构的来看，系统是作为业务核心交易的外围系统。核心的授信分析数据应该由上游吐出，对于核心、外围、后线分析确实存在总体的规划。集中的系统建设期之后，统一全面的考虑逐渐式微。业务发展变化、各系统的发展不均衡，原先总体的瀑布设计变成了下游的网状设计，局部数据的回流，导致即使存在系统接口，也无法拿到实时准确的数据。业务部门负责人即要求在本系统中录入，增加了数据来源，但是更加深了数据准确性危机。而且系统的业务方众多，一些业务需求对总体的影响考虑欠缺，仅为做系统而做系统，导致结构性的崩坏。作为系统本身也没有这种魄力去做好内部的重构，15年初有技术负责人开始准备把基础的数据拆离，方案一直在讨论，要求一直在下达，但是愈发多业务需求(不敢拒绝，不愿拒绝？)根本不给时间空间去做这件事情。有种积重难返的意味。

我自然是不会再参与了，本身技术这么渣，何必再去参与一件注定会失败的事情。


